# Given two integer arrays pushed and popped each with distinct values, return true if this could have been the result 
# of a sequence of push and pop operations on an initially empty stack, or false otherwise.

# Example 1:

# Input: pushed = [1,2,3,4,5], popped = [4,5,3,2,1]
# Output: true
# Explanation: We might do the following sequence:
# push(1), push(2), push(3), push(4), 
# pop() -> 4,
# push(5),
# pop() -> 5, pop() -> 3, pop() -> 2, pop() -> 1

class Solution(object):
    def validateStackSequences(self, pushed, popped):
        """
        :type pushed: List[int]
        :type popped: List[int]
        :rtype: bool
        """
        stack = [-1]
        
        for i in range(0, len(pushed) * 2):
            try:
                if popped[0] == stack[len(stack) - 1]:
                    stack.pop()
                    popped.pop(0)
                
                elif (isinstance (pushed[0], int)):
                    stack.append(pushed.pop(0))
                
                else:
                    return False
            except IndexError:
                    return False
                
        return True

# Test cases

# pushed = [1,2,3,4,5]
# popped = [4,3,5,1,2]
   
pushed = [1,2,3,4,5]
popped = [4,3,5,1,2]
   
# pushed = [2,1,3]
# popped = [2,1,3]   

# pushed = [1,0]
# popped = [1,0] 

# pushed = [0,2,1]
# popped = [0,1,2]

# pushed = [593,710,385,960,59,562,953,660,23,111,457,813,715,889,589,580,470,305,495,461,47,592,802,121,534,140,211,110,576,694,219,597,891,882,822,413,667,311,798,587,227,980,611,230,207,749,25,842,236,391,789,136,620,747,68,668,222,533,154,617,725,238,964,560,15,258,9,928,897,547,827,409,544,441,27,874,253,49,579,340,955,894,435,787,958,150,892,999,819,203,67,243,114,857,539,426,584,740,650,434,856,345,248,644,422,759,339,696,332,792,472,841,720,95,914,729,118,447,159,681,926,486,633,336,212,695,522,726,607,963,831,276,940,224,290,381,365,639,188,368,173,865,98,763,342,32,758,677,93,515,392,466,697,446,416,686,225,511,867,772,382,546,728,880,82,776,601,850,540,863,687,270,605,181,618,752,556,600,691,433,706,635,223,94,920,312,566,250,762,996,333,777,275,21,712,638,310,651,873,905,755,541,65,836,575,423,96,938,153,871,497,496,812,564,933,517,714,907,885,395,659,591,704,949,828,120,329,500,69,915,902,234,165,910,113,811,950,646,53,790,11,765,529,254,779,943,581,703,649,463,862,3,29,942,643,975,870,846,654,70,956,900,184,169,976,116,676,888,326,348,851,63,85,751,610,615,904,218,5,162,806,152,130,761,370,33,117,795,166,135,156,204,200,161,302,122,195,732,501,594,145,661,164,487,858,415,586,993,374,369,708,753,356,408,468,414,775,689,279,700,252,289,855,989,930,81,937,366,554,570,577,284,105,641,412,88,316,655,628,406,44,877,249,297,92,625,535,679,835,823,304,952,663,965,807,895,852,760,929,613,66,208,287,178,513,405,100,288,143,129,410,612,146,192,816,338,268,104,998,489,542,917,298,133,491,853,526,531,26,624,469,428,476,916,783,427,48,242,567,308,666,430,903,170,244,327,196,770,456,551,124,707,278,128,151,190,355,797,664,462,979,899,498,982,277,125,89,680,479,322,228,860,436,987,991,602,717,383,396,578,724,824,454,699,347,821,520,741,376,131,185,51,187,854,237,748,107,585,176,286,590,317,994,299,12,884,690,99,971,344,527,182,906,608,881,42,648,259,283,477,439,480,744,934,18,371,784,866,80,293,351,525,87,640,829,367,731,421,839,598,493,814,138,387,924,438,627,781,202,451,709,45,272,932,76,127,675,262,997,973,653,364,394,974,106,838,300,189,358,331,137,647,743,944,325,909,966,343,572,833,945,400,896,240,64,923,512,711,524,606,291,445,306,791,384,321,171,91,57,616,918,206,281,231,46,330,505,799,794,549,158,622,163,378,978,6,621,555,346,267,757,335,54,474,631,673,460,701,878,390,636,56,718,510,595,583,205,102,455,678,452,246,803,671,693,73,233,936,407,285,265,144,7,919,532,847,155,86,485,62,939,739,35,453,39,658,58,921,419,303,292,139,970,499,404,257,931,167,31,34,282,149,360,986,782,363,50,174,911,52,737,530,785,2,669,809,766,665,988,672,260,514,8,721,307,13,887,388,264,256,596,848,957,16,571,954,0,43,494,913,103,685,723,492,509,429,568,386,251,235,898,418,269,362,123,750,357,983,255,179,977,372,296,764,30,786,778,746,432,670,220,507,569,573,840,79,20,886,401,815,24,201,352,398,28,845,119,692,210,191,411,582,948,925,771,832,630,215,820,521,773,849,951,217,141,199,37,61,132,967,768,990,323,443,359,313,872,683,901,425,320,183,780,115,736,177,78,985,473,502,538,563,642,684,337,402,623,431,810,226,588,449,17,609,805,645,349,448,516,528,420,879,972,324,464,490,674,417,160,319,266,180,274,197,662,796,397,380,377,574,194,437,830,261,450,216,818,101,14,247,825,754,309,271,478,465,557,77,637,859,459,959,604,738,947,626,565,883,801,730,935,55,444,75,353,995,868,548,922,519,175,393,90,656,209,981,126,83,619,484,72,559,543,702,508,536,263,629,844,769,112,109,722,40,229,614,157,71,603,4,861,808,134,523,168,682,553,742,599,280,148,442,698,74,657,60,504,793,503,488,483,315,558,767,908,826,239,481,84,389,373,361,241,424,962,561,108,186,634,221,506,688,475,774,984,537,876,350,36,1,719,912,652,341,399,328,727,837,946,142,705,147,318,518,214,295,314,19,733,716,968,440,545,890,482,875,552,379,38,961,471,735,10,375,788,273,713,458,301,245,193,969,22,927,864,97,800,834,893,213,198,172,745,403,354,941,992,756,467,294,734,817,869,41,232,334,550,632,804,843]
# popped = [281,276,845,373,91,601,978,769,916,197,292,814,65,132,483,140,149,591,474,414,443,407,318,918,816,672,134,889,246,975,32,211,787,552,758,695,377,348,343,842,320,136,76,755,275,382,863,658,542,67,899,278,843,460,860,61,604,697,6,640,608,934,128,427,643,897,954,288,917,540,834,781,998,821,297,479,613,190,189,191,620,593,749,122,362,69,940,36,228,800,545,152,117,572,426,386,283,287,828,606,628,198,22,676,513,376,351,617,875,622,898,46,501,996,986,896,143,328,982,176,852,569,833,80,529,688,969,773,340,524,753,727,902,626,500,623,944,632,890,14,94,477,456,510,252,226,570,114,675,54,84,378,449,395,635,685,599,538,305,108,520,396,985,469,973,99,385,77,401,923,375,677,207,37,976,587,247,392,901,927,776,345,213,777,445,63,330,790,825,47,760,726,34,764,584,583,903,428,912,574,526,634,818,808,162,15,846,167,967,687,595,273,229,300,488,29,506,192,861,419,637,952,824,415,910,379,964,13,411,331,102,802,78,309,937,817,704,974,813,689,264,664,363,955,169,334,642,946,826,172,357,614,243,441,194,432,433,268,2,953,629,196,60,600,316,730,794,389,681,141,222,393,425,990,838,522,994,631,966,371,457,90,848,925,119,282,105,344,588,298,462,880,708,807,21,647,383,761,146,835,438,267,586,390,17,355,5,798,550,832,962,963,580,743,50,805,605,507,420,498,220,244,200,566,464,242,43,991,109,734,660,757,577,913,771,763,710,468,744,184,232,844,750,592,346,485,739,563,437,495,236,659,295,977,667,932,867,633,959,0,455,706,436,900,97,40,248,564,499,696,312,263,367,792,475,418,171,161,52,364,909,358,163,135,482,878,205,258,789,914,799,106,8,751,444,837,416,519,49,663,3,115,25,260,341,670,922,104,665,793,374,711,715,514,88,98,738,324,822,216,607,961,856,239,325,945,894,648,349,919,931,186,10,567,782,560,568,271,806,515,553,859,259,399,933,7,756,686,714,516,398,882,329,654,742,949,317,75,555,253,381,212,712,417,177,849,366,55,690,308,470,673,992,820,204,691,434,31,505,979,594,869,956,508,478,391,666,523,116,71,669,958,693,775,133,920,571,547,313,471,610,175,948,145,187,39,64,718,388,983,66,465,352,668,745,791,705,528,579,180,107,111,265,736,644,26,823,397,938,517,20,342,556,785,541,209,551,459,311,293,762,450,493,326,661,801,473,533,703,539,723,692,315,543,413,674,562,853,839,327,201,891,435,971,101,554,237,113,68,290,935,884,48,28,804,319,783,989,735,121,461,486,680,831,156,888,786,150,38,53,740,412,164,521,339,701,578,110,124,296,370,269,512,251,509,249,700,359,142,380,719,454,85,284,51,653,409,304,682,797,559,536,181,995,155,234,439,585,532,307,770,137,166,778,12,887,699,652,950,185,972,446,619,335,558,81,942,4,174,421,202,874,836,943,830,400,780,270,360,387,733,987,274,356,458,597,218,968,627,41,368,245,752,596,684,130,321,219,491,95,494,557,484,154,481,857,905,279,214,369,864,535,280,285,126,423,589,238,811,254,602,895,779,224,153,336,277,746,206,230,883,960,129,980,384,841,30,210,160,544,765,62,662,472,732,431,241,231,609,199,337,139,118,870,147,518,774,165,18,649,233,257,598,59,183,759,430,926,908,322,561,603,795,590,404,120,256,812,480,372,747,487,303,650,272,881,646,314,394,981,323,886,24,865,89,496,447,784,851,11,612,772,57,803,138,873,112,27,289,79,504,858,402,424,182,144,195,100,347,451,503,716,82,511,709,810,766,924,403,221,698,721,645,970,724,405,301,70,151,854,306,815,442,193,490,178,915,127,452,463,159,56,713,929,717,286,173,819,827,179,546,871,262,86,957,671,1,636,582,531,255,741,527,847,879,611,72,936,549,158,678,720,537,651,266,707,23,83,575,624,16,227,997,291,656,809,73,877,188,615,993,866,406,302,365,768,885,911,868,530,941,731,208,125,907,123,93,893,240,502,148,489,350,223,9,729,855,215,641,157,581,497,299,930,33,965,939,203,639,42,294,655,92,928,354,96,625,74,250,679,892,448,410,44,725,534,876,630,565,947,904,333,850,103,754,906,353,796,657,702,361,737,862,453,467,332,168,338,788,476,829,576,217,19,728,694,58,466,35,840,429,988,683,951,767,408,872,87,225,261,616,525,548,999,748,638,131,573,984,170,440,921,310,235,722,492,618,621,45,422]

sol = Solution()
print(sol.validateStackSequences(pushed, popped))

        